services:

  api:
    build:
      context: .
      dockerfile: Dockerfile.api.prod
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER}
      SPRING_LIQUIBASE_CHANGELOG: ${LIQUIBASE_MIGRATIONS}
    expose:
      - '8080'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/employees || exit 1"]
      interval: 5s
      retries: 5
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - pg_password
    networks:
      - company_network

  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
    expose:
      - '5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d companydb"]
      interval: 5s
      retries: 5
      start_period: 10s
    secrets:
      - pg_password
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - company_network

  nginx:
    image: nginx:alpine-slim
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      api:
        condition: service_healthy
    networks:
      - company_network

secrets:
  pg_password:
    file: ./sets/pg_secret_password.txt

volumes:
  pg_data:

networks:
  company_network:
    driver: bridge
